import (
	"go.opencensus.io/trace"
)

{{ $decorator := (or .Vars.DecoratorName (printf "%sWithTracing" .Interface.Name)) }}

// {{$decorator}} implements {{.Interface.Type}} interface instrumented with opentracing spans
type {{$decorator}} struct {
  {{.Interface.Type}}
}

// New{{$decorator}} returns {{$decorator}}
func New{{$decorator}} (base {{.Interface.Type}}) {{$decorator}} {
  d := {{$decorator}} {
    {{.Interface.Name}}: base,
  }

  return d
}

{{range $method := .Interface.Methods}}
  {{if $method.AcceptsContext}}
    // {{$method.Name}} implements {{$.Interface.Type}}
    func (d {{$decorator}}) {{$method.Declaration}} {
      ctx, span := trace.StartSpan(ctx, "{{$.Interface.Name}}.{{$method.Name}}")
      defer span.End()

      {{$method.Pass (printf "d.%s." $.Interface.Name)}}
    }
  {{end}}
{{end}}
