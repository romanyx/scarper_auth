// Automatically generated by MockGen. DO NOT EDIT!
// Source: service.go

package verify

import (
	context "context"
	gomock "github.com/golang/mock/gomock"
	user "github.com/romanyx/scraper_auth/internal/user"
)

// Mock of Repository interface
type MockRepository struct {
	ctrl     *gomock.Controller
	recorder *_MockRepositoryRecorder
}

// Recorder for MockRepository (not exported)
type _MockRepositoryRecorder struct {
	mock *MockRepository
}

func NewMockRepository(ctrl *gomock.Controller) *MockRepository {
	mock := &MockRepository{ctrl: ctrl}
	mock.recorder = &_MockRepositoryRecorder{mock}
	return mock
}

func (_m *MockRepository) EXPECT() *_MockRepositoryRecorder {
	return _m.recorder
}

func (_m *MockRepository) FindByToken(_param0 context.Context, _param1 string, _param2 *user.User) error {
	ret := _m.ctrl.Call(_m, "FindByToken", _param0, _param1, _param2)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockRepositoryRecorder) FindByToken(arg0, arg1, arg2 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "FindByToken", arg0, arg1, arg2)
}

func (_m *MockRepository) Verify(_param0 context.Context, _param1 int32) error {
	ret := _m.ctrl.Call(_m, "Verify", _param0, _param1)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockRepositoryRecorder) Verify(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Verify", arg0, arg1)
}

func (_m *MockRepository) Find(_param0 context.Context, _param1 int32, _param2 *user.User) error {
	ret := _m.ctrl.Call(_m, "Find", _param0, _param1, _param2)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockRepositoryRecorder) Find(arg0, arg1, arg2 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Find", arg0, arg1, arg2)
}
