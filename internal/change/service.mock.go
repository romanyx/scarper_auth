// Automatically generated by MockGen. DO NOT EDIT!
// Source: service.go

package change

import (
	context "context"
	gomock "github.com/golang/mock/gomock"
	user "github.com/romanyx/scraper_auth/internal/user"
)

// Mock of Validater interface
type MockValidater struct {
	ctrl     *gomock.Controller
	recorder *_MockValidaterRecorder
}

// Recorder for MockValidater (not exported)
type _MockValidaterRecorder struct {
	mock *MockValidater
}

func NewMockValidater(ctrl *gomock.Controller) *MockValidater {
	mock := &MockValidater{ctrl: ctrl}
	mock.recorder = &_MockValidaterRecorder{mock}
	return mock
}

func (_m *MockValidater) EXPECT() *_MockValidaterRecorder {
	return _m.recorder
}

func (_m *MockValidater) Validate(ctx context.Context, f *Form) error {
	ret := _m.ctrl.Call(_m, "Validate", ctx, f)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockValidaterRecorder) Validate(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Validate", arg0, arg1)
}

// Mock of Repository interface
type MockRepository struct {
	ctrl     *gomock.Controller
	recorder *_MockRepositoryRecorder
}

// Recorder for MockRepository (not exported)
type _MockRepositoryRecorder struct {
	mock *MockRepository
}

func NewMockRepository(ctrl *gomock.Controller) *MockRepository {
	mock := &MockRepository{ctrl: ctrl}
	mock.recorder = &_MockRepositoryRecorder{mock}
	return mock
}

func (_m *MockRepository) EXPECT() *_MockRepositoryRecorder {
	return _m.recorder
}

func (_m *MockRepository) FindResetToken(ctx context.Context, token string, r *Token) error {
	ret := _m.ctrl.Call(_m, "FindResetToken", ctx, token, r)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockRepositoryRecorder) FindResetToken(arg0, arg1, arg2 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "FindResetToken", arg0, arg1, arg2)
}

func (_m *MockRepository) ChangePassword(ctx context.Context, id int32, passwordHash string) error {
	ret := _m.ctrl.Call(_m, "ChangePassword", ctx, id, passwordHash)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockRepositoryRecorder) ChangePassword(arg0, arg1, arg2 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "ChangePassword", arg0, arg1, arg2)
}

func (_m *MockRepository) FindByID(ctx context.Context, id int32, u *user.User) error {
	ret := _m.ctrl.Call(_m, "FindByID", ctx, id, u)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockRepositoryRecorder) FindByID(arg0, arg1, arg2 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "FindByID", arg0, arg1, arg2)
}
